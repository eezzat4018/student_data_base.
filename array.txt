void insert(){

    printf("\nFor student number %d",(i+1) );
    printf("\nEnter the first name of the student : " );
    scanf("%s",&(p+i)->first_name);
    printf("\nEnter the last name of the student : " );
    scanf("%s",&(p+i)->surname);
    printf("\nEnter date of birth in this format (dd/mm/yyyy)  : ");
    scanf("%s",&(p+i)->birthday);
    printf("\nEnter the student ID : ");
    scanf("%d",&(p+i)->roll_no);
    printf("\nEnter the student score : ");
    scanf("%d",&(p+i)->score);
      }
void insert_info(struct student *s){
    printf("\nEnter the first name of the student : " );
    scanf("%s",&s->first_name);
    printf("\nEnter the last name of the student : " );
    scanf("%s",&s->surname);
    printf("\nEnter date of birth in this format (dd/mm/yyyy)  : ");
    scanf("%s",&s->birthday);
    printf("\nEnter the student ID : ");
    scanf("%d",&s->roll_no);
    printf("\nEnter the student score : ");
    scanf("%d",&s->score);
}

void insert_at_pos(){
    //check if array is  full
    if (no_stud==array_size)
    array_size++;
    p = (struct student *)realloc(p, array_size * sizeof(struct student));
    int choose;
    printf("\nenter 1 insert a student at start\nenter 2 insert a student at middle\nenter 3 insert a student at end");
    printf("\n Enter your choice \n");
    scanf("%d",&choose);
    switch(choose){
        case 1:
         for (int i = no_stud; i > 0; i--)
        { // this loop to shift array to the right
            *(p + i) = *(p + i - 1);
        } // insert data at the beginning
        insert_info(p);
        no_stud++;
        break;
        case 2:
        {
        int pos;
        printf("\nEnter position you want to insert at");
        scanf("%d", &pos);
        for (int i = no_stud; i >= pos; i--)
        { //  this loop to shift array to the right
            *(p + i) = *(p + i - 1);
        }
          // insert student at wanted position
        ptr=p + pos ;
        insert_info(ptr);
        no_stud++;
        break;
    }
    case 3:
        *(p + no_stud) = *(p + no_stud - 1);
        ptr=p + no_stud ;
        insert_info(ptr);
        no_stud++;
    }
}
void display_array(){
    for (i=0;i<no_stud;i++){
    printf("\n first name:\t %s\n", (p+i)->first_name);
    printf(" last name:\t %s\n",(p+i)->surname);
    printf(" roll.no:\t %d\n", (p+i)->roll_no);
    printf(" birthday:\t %s\n",(p+i)->birthday);
    printf(" score:\t %d\n", (p+i)->score);
    }
}
void calc_time_array() {
     clock_t start = clock();
   insert_at_pos();
     clock_t stop = clock();
    double elapsed = (double)(stop -  start) * 1000.0 / CLOCKS_PER_SEC;
    printf("Time elapsed in ms: %f", elapsed);}
